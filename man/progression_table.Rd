% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/progression-tables-percRM.R,
%   R/progression-tables.R
\name{percRM_step}
\alias{percRM_step}
\alias{progression_table}
\alias{RIR_increment}
\alias{RIR_increment_fixed_2}
\alias{RIR_increment_fixed_4}
\alias{perc_drop}
\alias{perc_drop_fixed_5}
\alias{perc_drop_fixed_25}
\alias{generate_progression_table}
\title{Progression table}
\usage{
percRM_step(
  reps,
  step = 0,
  volume = "normal",
  type = "grinding",
  adjustment = 0,
  func_max_perc_1RM = get_max_perc_1RM_percMR
)

RIR_increment(
  reps,
  step = 0,
  volume = "normal",
  type = "grinding",
  adjustment = 0,
  func_max_perc_1RM = get_max_perc_1RM
)

RIR_increment_fixed_2(
  reps,
  step = 0,
  volume = "normal",
  type = "grinding",
  adjustment = 0,
  func_max_perc_1RM = get_max_perc_1RM
)

RIR_increment_fixed_4(
  reps,
  step = 0,
  volume = "normal",
  type = "grinding",
  adjustment = 0,
  func_max_perc_1RM = get_max_perc_1RM
)

perc_drop(
  reps,
  step = 0,
  volume = "normal",
  type = "grinding",
  adjustment = 0,
  func_max_perc_1RM = get_max_perc_1RM
)

perc_drop_fixed_5(
  reps,
  step = 0,
  volume = "normal",
  type = "grinding",
  adjustment = 0,
  func_max_perc_1RM = get_max_perc_1RM
)

perc_drop_fixed_25(
  reps,
  step = 0,
  volume = "normal",
  type = "grinding",
  adjustment = 0,
  func_max_perc_1RM = get_max_perc_1RM
)

generate_progression_table(
  type = c("grinding", "ballistic"),
  volume = c("intensive", "normal", "extensive"),
  reps = 1:12,
  step = seq(-3, 0, 1),
  progression_table = RIR_increment,
  ...
)
}
\arguments{
\item{reps}{Number of reps}

\item{step}{Progression step. Default is 0. Use negative numbers (i.e., -1, -2)}

\item{volume}{Character string: 'intensive', 'normal' (Default), or 'extensive'}

\item{type}{Type of max rep table. Options are grinding (Default) and ballistic.}

\item{adjustment}{Additional adjustment. Default is 0.}

\item{func_max_perc_1RM}{What max rep table should be used?
Default is \code{\link{get_max_perc_1RM}}}

\item{progression_table}{Progression table function to use. Default is
\code{\link{RIR_increment}}}

\item{...}{Forwarded to \code{progression_table} for using different rep max function}
}
\value{
List with two elements: \code{adjustment} and \code{perc_1RM}
}
\description{
Progression table explained in the 'Strength Training Manual' Chapter 6.
}
\section{Functions}{
\itemize{
\item \code{percRM_step}: \%MR Step progression table

\item \code{RIR_increment}: RIR Increment progression table. This is the original
progression table from the Strength Training Manual

\item \code{RIR_increment_fixed_2}: Fixed 2 RIR Increment progression table. This variant have fixed RIR
increment across reps from phases to phases (2RIR) and 2RIR difference between extensive, normal, and
intensive schemes

\item \code{RIR_increment_fixed_4}: Fixed 4 RIR Increment progression table. This variant have fixed RIR
increment across reps from phases to phases (4RIR) and 4RIR difference between extensive, normal, and
intensive schemes

\item \code{perc_drop}: Percent Drop progression table. This is the original
progression table from the Strength Training Manual

\item \code{perc_drop_fixed_5}: 5\% Fixed Percent Drop progression table. This variant have fixed percent
drops across reps from phases to phases (5\%) and 5\% difference between extensive, normal, and
intensive schemes

\item \code{perc_drop_fixed_25}: 2.5\% Fixed Percent Drop progression table. This variant have fixed percent
drops across reps from phases to phases (2.5\%) and 2.5\% difference between extensive, normal, and
intensive schemes

\item \code{generate_progression_table}: Generates progression tables
}}

\examples{
percRM_step(10, step = seq(-3, 0, 1))
percRM_step(10, step = seq(-3, 0, 1), volume = "extensive")
percRM_step(5, step = seq(-3, 0, 1), type = "ballistic")
RIR_increment(10, step = seq(-3, 0, 1))
RIR_increment(10, step = seq(-3, 0, 1), volume = "extensive")
RIR_increment(5, step = seq(-3, 0, 1), type = "ballistic")
RIR_increment(10, step = seq(-3, 0, 1))
RIR_increment(10, step = seq(-3, 0, 1), volume = "extensive")
RIR_increment(5, step = seq(-3, 0, 1), type = "ballistic")
RIR_increment(10, step = seq(-3, 0, 1))
RIR_increment(10, step = seq(-3, 0, 1), volume = "extensive")
RIR_increment(5, step = seq(-3, 0, 1), type = "ballistic")
perc_drop(10, step = seq(-3, 0, 1))
perc_drop(10, step = seq(-3, 0, 1), volume = "extensive")
perc_drop(5, step = seq(-3, 0, 1), type = "ballistic")
perc_drop_fixed_5(10, step = seq(-3, 0, 1))
perc_drop_fixed_5(10, step = seq(-3, 0, 1), volume = "extensive")
perc_drop_fixed_5(5, step = seq(-3, 0, 1), type = "ballistic")
perc_drop_fixed_25(10, step = seq(-3, 0, 1))
perc_drop_fixed_25(10, step = seq(-3, 0, 1), volume = "extensive")
perc_drop_fixed_25(5, step = seq(-3, 0, 1), type = "ballistic")
generate_progression_table()

generate_progression_table(type = "grinding", volume = "normal")

generate_progression_table(
  reps = 1:5,
  step = seq(-5, 0, 1),
  type = "grinding",
  volume = "normal"
)
}
